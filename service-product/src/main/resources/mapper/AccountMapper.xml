<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.melody.dao.AccountDao">

    <resultMap id="BaseResultMap" type="Account">
        <id column="ID" jdbcType="BIGINT" property="id"/>
        <result column="USER_ID" jdbcType="BIGINT" property="userId"/>
        <result column="TOTAL_ASSET" jdbcType="DECIMAL" property="totalAsset"/>
        <result column="USABLE_BALANCE" jdbcType="DECIMAL" property="usableBalance"/>
        <result column="FROZEN_AMOUNT" jdbcType="DECIMAL" property="frozenAmount"/>
        <result column="CREATE_DATE" jdbcType="TIMESTAMP" property="createDate"/>
        <result column="UPDATE_DATE" jdbcType="TIMESTAMP" property="updateDate"/>
    </resultMap>
    <sql id="Base_Column_List">
        ID, USER_ID, TOTAL_ASSET, USABLE_BALANCE, FROZEN_AMOUNT, CREATE_DATE, UPDATE_DATE
    </sql>

    <resultMap type="UserLevel" id="UserLevelMap">
        <result property="level" column="level"/>
    </resultMap>


    <sql id="pagination">
        <![CDATA[


	    LIMIT #{currentPage}, #{pageSize}


        ]]>
	</sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from TT_ACCOUNT
        where ID = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from TT_ACCOUNT
        where ID = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="Account">
        insert into TT_ACCOUNT (ID, USER_ID, TOTAL_ASSET,
        USABLE_BALANCE, FROZEN_AMOUNT, CREATE_DATE,
        UPDATE_DATE)
        values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{totalAsset,jdbcType=DECIMAL},
        #{usableBalance,jdbcType=DECIMAL}, #{frozenAmount,jdbcType=DECIMAL}, #{createDate,jdbcType=TIMESTAMP},
        #{updateDate,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="Account">
        insert into TT_ACCOUNT
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                ID,
            </if>
            <if test="userId != null">
                USER_ID,
            </if>
            <if test="totalAsset != null">
                TOTAL_ASSET,
            </if>
            <if test="usableBalance != null">
                USABLE_BALANCE,
            </if>
            <if test="frozenAmount != null">
                FROZEN_AMOUNT,
            </if>
            <if test="createDate != null">
                CREATE_DATE,
            </if>
            <if test="updateDate != null">
                UPDATE_DATE,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="totalAsset != null">
                #{totalAsset,jdbcType=DECIMAL},
            </if>
            <if test="usableBalance != null">
                #{usableBalance,jdbcType=DECIMAL},
            </if>
            <if test="frozenAmount != null">
                #{frozenAmount,jdbcType=DECIMAL},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateDate != null">
                #{updateDate,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="Account">
        update TT_ACCOUNT
        <set>
            <if test="userId != null">
                USER_ID = #{userId,jdbcType=BIGINT},
            </if>
            <if test="totalAsset != null">
                TOTAL_ASSET = #{totalAsset,jdbcType=DECIMAL},
            </if>
            <if test="usableBalance != null">
                USABLE_BALANCE = #{usableBalance,jdbcType=DECIMAL},
            </if>
            <if test="frozenAmount != null">
                FROZEN_AMOUNT = #{frozenAmount,jdbcType=DECIMAL},
            </if>
            <if test="createDate != null">
                CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateDate != null">
                UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
            </if>
        </set>
        where ID = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="Account">
        update TT_ACCOUNT
        set USER_ID = #{userId,jdbcType=BIGINT},
        TOTAL_ASSET = #{totalAsset,jdbcType=DECIMAL},
        USABLE_BALANCE = #{usableBalance,jdbcType=DECIMAL},
        FROZEN_AMOUNT = #{frozenAmount,jdbcType=DECIMAL},
        CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
        UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP}
        where ID = #{id,jdbcType=BIGINT}
    </update>


    <insert id="insertBirdCoinAccount" parameterType="BirdCoinAccount"
            useGeneratedKeys="true" keyProperty="id">
		INSERT INTO
		TT_BIRD_COIN_ACCOUNT(ID,BRD_ACCOUNT_ID,USER_ID,ACCOUNT_ID,TOTAL_AMOUNT,BALANCE,CREATE_DATE,UPDATE_DATE)
		VALUES
		(#{id},#{brdAccountId},#{userId},#{accountId},#{totalAmount},#{balance},#{createDate},#{updateDate})
	</insert>
    <!-- -->
    <update id="updateAccountBalance">
		UPDATE TT_ACCOUNT SET
		USABLE_BALANCE=(USABLE_BALANCE-#{orderAmount}) where
		USER_ID=#{userId}
	</update>


    <update id="updateAccountUsableBalance">
		UPDATE TT_ACCOUNT SET USABLE_BALANCE=#{usableBalance}
		where ID=#{id}
	</update>

    <update id="updateBirdCoinAccountAmount">
		UPDATE TT_BIRD_COIN_ACCOUNT SET BALANCE = BALANCE -
		#{amount},UPDATE_DATE=SYSDATE() WHERE USER_ID = #{userId}
	</update>
    <update id="promoteUserLevel">
		UPDATE TT_USER_LEVEL l
		SET LEVEL = #{level},UPDATE_DATE=SYSDATE()
		WHERE
		(
		SELECT
		count(u.USER_ID)
		FROM
		TS_USER u,
		TT_REFERRER r
		WHERE
		r.FATHER_ID =#{userId}
		AND u.USER_ID = r.USER_ID
		AND u.BANK_AUTH_STATUS = 1
		) >= 3
		AND l.USER_ID = #{userId}
	</update>

    <insert id="insertUserLevel">
		INSERT INTO TT_USER_LEVEL SET
		ID=#{id},USER_ID=#{userId},LEVEL=#{level},CREATE_DATE=SYSDATE()
	</insert>


    <select id="findUserAccountByUserId" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        <![CDATA[  FROM TT_ACCOUNT WHERE USER_ID = #{userId}]]>
    </select>

    <select id="findAccountTotalByUserId" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        <![CDATA[  FROM TT_ACCOUNT WHERE USER_ID = #{userId}]]>
    </select>


    <!--<select id="findMyAccountByUserId" resultMap="BaseResultMap">-->
    <!--<![CDATA[-->
    <!--SELECT A.TOTAL_ASSET,A.USABLE_BALANCE ,B.BALANCE BIRD_BALANCE-->
    <!--FROM  TT_ACCOUNT A,TT_BIRD_COIN_ACCOUNT B WHERE B.ACCOUNT_ID=A.ID AND A.USER_ID=#{userId}-->
    <!--]]>-->
    <!--</select>-->


    <!--<select id="findUserAccountInfo" resultMap="UserAccountInfoMap">-->
    <!--select-->
    <!--BANK_AUTH_STATUS,NAME_AUTH_STATUS, IS_BASIC_INFO, IS_APPLY_SUBMIT from TS_USER where USER_ID-->
    <!--=#{userId}-->
    <!--</select>-->

    <select id="findUserLevel" resultMap="UserLevelMap">
		SELECT LEVEL AS level FROM TT_USER_LEVEL WHERE USER_ID=#{userId}
	</select>


    <!--<select id="findsxtIsShow" resultType="java.lang.Integer">-->
    <!--SELECT IFNULL(TS.ITEM_VALUE,0) FROM TS_SYSPARAMETER TS WHERE TS.ITEM_NAME='SXT_ISSHOW';-->
    <!--</select>-->


</mapper>